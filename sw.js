!function(){"use strict";const e="1.2.4",t="cache-1.2.4",s=["/","/dist/config.min.js","/dist/main@".concat(e,".min.js"),"/dist/style.css"],n=[];self.addEventListener("install",(e=>(self.skipWaiting(),e.waitUntil(caches.open(t).then((e=>e.addAll(s).then((()=>{"connection"in navigator&&!navigator.connection.saveData&&n.length&&e.addAll(n)})))))))),self.addEventListener("activate",(e=>(console.info("[ServiceWorker] Activate."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==t)return console.info("[ServiceWorker] Removing old cache: ",e),caches.delete(e)})))))),self.clients.claim()))),self.addEventListener("fetch",new class{constructor(e){return t=>t.respondWith((async()=>{let s=await t.preloadResponse;if(!s)try{s=await fetch(t.request)}finally{if(!s){const e=await caches.match(t.request.url);return e||Response.error()}if(200!==s.status&&0!==s.status){const e=await caches.match(t.request.url);return e||s}}if("GET"===t.request.method&&["opaque","cors","basic"].includes(s.type)||/(\.mp3)$/.test(request.url)){const n=s.clone();t.waitUntil(caches.open(e).then((e=>e.put(t.request.url,n))))}return s})())}}(t))}();