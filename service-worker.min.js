!function(){"use strict";function e(e,t,n,i,r,a,s){try{var c=e[a](s),o=c.value}catch(e){return void n(e)}c.done?t(o):Promise.resolve(o).then(i,r)}var t="1.2.4",n="cache-1.2.4",i=["/","/dist/config.js","/dist/main@".concat(t,".js"),"/dist/style.css"],r=[];self.addEventListener("install",(e=>{self.skipWaiting(),e.waitUntil(caches.open(n).then((e=>e.addAll(i).then((()=>{"connection"in navigator&&!navigator.connection.saveData&&r.length&&e.addAll(r)})))))})),self.addEventListener("activate",(e=>(console.info("[ServiceWorker] Activate."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==n)return console.info("[ServiceWorker] Removing old cache: ",e),caches.delete(e)})))))),self.clients.claim()))),self.addEventListener("fetch",(t=>{return t.respondWith((n=function*(){var e=yield t.preloadResponse;if(!e)try{e=yield fetch(t.request)}finally{if(!e){var n=yield caches.match(t.request.url);return n||Response.error()}if(200!==e.status&&0!==e.status){var i=yield caches.match(t.request.url);return i||e}}if("GET"===t.request.method&&["opaque","cors","basic"].includes(e.type)||/(\.mp3)$/.test(request.url)){var r=e.clone();t.waitUntil(caches.open(cacheName).then((e=>e.put(t.request.url,r))))}return e},function(){var t=this,i=arguments;return new Promise((function(r,a){var s=n.apply(t,i);function c(t){e(s,r,a,c,o,"next",t)}function o(t){e(s,r,a,c,o,"throw",t)}c(void 0)}))})());var n}))}();